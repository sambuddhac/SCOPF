# Produced by CVXGEN, 2015-03-30 03:25:41 -0400.
# CVXGEN is Copyright (C) 2006-2012 Jacob Mattingley, jem@cvxgen.com.
# The code in this file is Copyright (C) 2006-2012 Jacob Mattingley.
# CVXGEN, or solvers produced by CVXGEN, cannot be used for commercial
# applications without prior written permission from Jacob Mattingley.

# Filename: description.cvxgen.
# Description: A description of the CVXGEN problem.

dimensions
  m=101 # Total number of base case + contingencies
end

parameters
  contNum positive # (-)Maximum number of contingencies allowed (100), less the actual number of contingencies considered
  rho positive # ADMM tuning parameter
  PgMax positive; PgMin nonnegative # Generator Limits
  c2 nonnegative; c1 nonnegative; c0 nonnegative # Generator cost coefficients, quadratic, liear and constant terms respectively
  Pg_N_init[i], i=1..m # Generator injection from last iteration for base case and contingencies
  Pg_N_avg[i], i=1..m # Net average power from last iteration for base case and contingencies
  Thetag_N_avg[i], i=1..m # Net average bus voltage angle from last iteration for base case and contingencies
  ug_N[i], i=1..m # Dual variable for net power balance for base case and contingencies
  vg_N[i], i=1..m #  Dual variable for net angle balance for base case and contingencies
  Vg_N_avg[i], i=1..m # Average of dual variable for net angle balance from last to last iteration for base case and contingencies

end

variables
  Pg # Generator real power output
  Thetag[i], i=1..m # Generator bus angle for base case and contingencies
end

minimize
  c2*square(Pg)+c1*Pg+c0+(rho/2)*(sum[i=1..m](square(Pg-Pg_N_init[i]+Pg_N_avg[i]+ug_N[i])+square(Thetag[i]-Vg_N_avg[i]-Thetag_N_avg[i]+vg_N[i]))+(contNum)*square(Pg))
subject to
  PgMin <= Pg <= PgMax
end
